- name: Create volume
  docker_volume:
    name: 'etcd-vol'
    state: "{{ VOLUME_STATE }}"
    driver_options:
      type: none
      device: '/etcd-vol'
      o: bind
  tags: asbrl-etcd

- name: Create folder for certificates
  file:
    path: "/etc/etcd/certs"
    state: directory
    owner: root
    group: root
    mode: u+rwX,g+rwX,o=rX
  tags: asbrl-etcd

- name: copy pem 
  when: ETCD_CERT_FILE != ''
  copy:
    dest: "/etc/etcd/certs/cert.pem"
    content: "{{ ETCD_CERT_FILE }}"
    mode: u+rwX,g+rwX,o=rX
  tags: asbrl-etcd

- name: copy key 
  when: ETCD_KEY_FILE != ''
  copy:
    dest: "/etc/etcd/certs/cert.key"
    content: "{{ ETCD_KEY_FILE }}"
    mode: u+rwX,g+rwX,o=rX
  tags: asbrl-etcd

- name: write certificates
  docker_volume:
    name: 'etcd-vol'
    state: "{{ VOLUME_STATE }}"
    driver_options:
      type: none
      device: '/etcd-vol'
      o: bind
  tags: asbrl-etcd  

- name: Docker run
  when: ETCD_NAME == inventory_hostname
  docker_container:
    name: "{{ CONTAINER_NAME }}"
    image: "{{ IMAGE }}:{{ IMAGE_TAG }}"
    pull: "yes"
    recreate: "yes"
    command: etcd -name {{ ETCD_NAME }}
    volumes:
    - "etcd-vol:{{ ETCD_DATA_DIR }}"
    - "/etc/etcd/certs/cert.key:/etc/etcd/certs/cert.key"
    - "/etc/etcd/certs/cert.pem:/etc/etcd/certs/cert.pem"
    env:
      ETCD_ENABLE_V2: 'true'
      ALLOW_NONE_AUTHENTICATION: 'yes'
      #ETCD_LISTEN_PEER_URLS: http://0.0.0.0:2380
      ETCD_INITIAL_ADVERTISE_PEER_URLS: "{{ ETCD_URL }}:2380"
      ETCD_LISTEN_CLIENT_URLS: "{{ ETCD_URL.split(':')[0] }}://0.0.0.0:2379"
      ETCD_ADVERTISE_CLIENT_URLS: "{{ ETCD_URL }}:2379"
      ETCD_INITIAL_CLUSTER: "{{ ETCD_INITIAL_CLUSTER }}"
      ETCD_INITIAL_CLUSTER_STATE: new
      ETCD_INITIAL_CLUSTER_TOKEN: "{{ ETCD_TOKEN }}"
      ETCD_DATA_DIR: "{{ ETCD_DATA_DIR }}"
      ETCD_KEY_FILE: "/etc/etcd/certs/cert.key"
      ETCD_CERT_FILE: "/etc/etcd/certs/cert.pem"
    cpu_period: "{{ DOCKER_CPU_PERIOD }}"
    cpu_quota: "{{ DOCKER_CPU_QUOTA }}"
    memory: "{{ DOCKER_MEMORY }}"
    state: "{{ CONTAINER_STATE }}"
    restart_policy: "unless-stopped"
    log_driver: "{{ DOCKER_LOG_DRIVER }}"
    log_options: "{{ DOCKER_LOG_OPTIONS }}"
    ports:
    -  "{{ PEER_PORT }}:2380"
    -  "{{ CLIENT_PORT }}:2379"
  tags: asbrl-etcd